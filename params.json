{
  "name": "QuagmiR",
  "tagline": "QuagmiR: The pipeline for IsomiR quantification and analysis",
  "body": "# QuagmiR\r\nA python-based miRNA sequencing pipeline for isomiR quantification and analysis\r\n\r\n![](http://g.recordit.co/GbfgMIq28L.gif)\r\n\r\n## Dependencies\r\n* Make sure that you have [Python 3.4+](https://www.python.org/downloads/) installed (type `python --version` in the console) \r\n* Make sure you have the latest version of pip: `pip3 install -U pip`\r\n* Make sure you have [Miniconda](http://conda.pydata.org/docs/install/quick.html) installed\r\n\r\n## Installation\r\n1. Download repository: `git clone https://github.com/kevchn/quagmir`\r\n2. Go into local quagmir folder: `cd quagmir`\r\n3. Install Python dependencies: `conda create -n quagmir python=3 --file req.txt`\r\n4. Activate your conda environment (see below) and then enter: `conda install -c bioconda snakemake`\r\n\r\n## Quickstart\r\n\r\n1. Activate your conda environment: `source activate quagmir`\r\n2. Add your .fastq_ready samples into the data folder (a sample has been provided for testing):\r\n  <pre>\r\n  ├── LICENSE\r\n  ├── README.md\r\n  ├── config.yaml\r\n  ├── Snakefile\r\n  ├── data/\r\n  │   ├── sample.fastq_ready\r\n  │   └── <b>YOUR_FILE_HERE.fastq_ready</b>\r\n  |   ├── collapsed/\r\n  ├── motif-consensus.fa\r\n  └── results/\r\n  │   └── tabular/\r\n  </pre>\r\n\r\n3. Edit the **motif-consensus.fa** file to insert your miRNA information with the following format:\r\n  ```\r\n  >miRNA_name miRNA_motif\r\n  miRNA_consensus_sequence\r\n\r\n  >passenger-shRNA-mir21-ORF59-5p-1 ACACCCTGGCCGGGT\r\n  CCGACACCCTGGCCGGGTTGT\r\n  ```\r\n\r\n4. Edit the **config.yaml** file to change configuration options if needed (default values fine in most use cases):\r\n  ```\r\n  # DISPLAY\r\n  min_ratio: .001\r\n  min_read: 9\r\n\r\n  display_summary: True\r\n  display_sequence_info: True\r\n  display_nucleotide_dist: True\r\n\r\n  # FUNCTION\r\n  destructive_motif_pull: False\r\n\r\n  # INPUT\r\n  motif_consensus_file: 'motif-consensus.fa' \r\n  ```\r\n\r\n5. Run pipeline: `snakemake`\r\n\r\n## Notes\r\nThe step of collapsing sample files takes the longest time, but once the samples are collapsed, and you need to re-run the pipeline, the pipeline will automatically start from the collapsed files and take a far shorter amount of time\r\n\r\nOutput will be a **sample.fastq_ready.results.txt** file for each sample in the **results/** folder",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}